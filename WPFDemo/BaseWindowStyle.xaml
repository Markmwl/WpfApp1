<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFMain">
    <ControlTemplate x:Key="WindowTemplateKey"
                     TargetType="{x:Type Window}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
                <ResizeGrip Visibility="Collapsed"
                            IsTabStop="false"
                            HorizontalAlignment="Right"
                            x:Name="WindowResizeGrip"
                            VerticalAlignment="Bottom" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode"
                               Value="CanResizeWithGrip" />
                    <Condition Property="WindowState"
                               Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="WindowResizeGrip"
                        Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="BaseWindowControlTemplate" TargetType="{x:Type Window}">
        <DockPanel LastChildFill="True">
            <!--外边框-->
            <Border Width="Auto"
                    Height="Auto"
                    DockPanel.Dock="Top"
                    Background="#FF7097D0"
                    CornerRadius="0,0,0,0"
                    x:Name="borderTitle">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*">

                        </ColumnDefinition>
                        <ColumnDefinition Width="*">

                        </ColumnDefinition>

                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"   Margin="20,0,2,2"  Name="Title" VerticalAlignment="Top" FontSize="20"
          Foreground="White" Text="{TemplateBinding Title}"/>
                    <StackPanel Grid.Column="1" HorizontalAlignment="Right"
                            Orientation="Horizontal">

                        <!--最小化按钮-->
                        <Button x:Name="btnMin" Content="M" Margin="2,2,2,2" Style="{DynamicResource MinButtonStyle}"/>

                        <!--最大化按钮-->
                        <Button x:Name="btnMax" Content="M" Margin="2,2,2,2" Style="{DynamicResource MaxButtonStyle}"/>
                        <!--关闭按钮-->
                        <Button x:Name="btnClose" Content="M" Margin="2,2,2,2" Style="{DynamicResource CloseButtonStyle}"/>
                    </StackPanel>
                </Grid>

            </Border>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Width="Auto"
                    Height="Auto"
                    DockPanel.Dock="Top"
                    CornerRadius="0,0,4,4">
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
            </Border>
        </DockPanel>
    </ControlTemplate>
    <Style x:Key="BaseWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template" Value="{StaticResource BaseWindowControlTemplate}"/>

        <Setter Property="AllowsTransparency"
                Value="True" />
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="BorderBrush"
                Value="#FF7097D0" />
        <Setter Property="BorderThickness"
                Value="4,4,4,4" />
        <Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--最小化按钮-->
    <Style x:Key="MinButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="Button">
                    <!--背景色-->
                    <Border x:Name="back" Opacity="0.8" CornerRadius="0" BorderBrush="#FFCDA05F" Background="#FFFFE9C9" BorderThickness="1" Margin="1" Padding="2,0,0,0">
                        <!--按钮内容-->
                        <Path x:Name="cp" Width="12" Height="12"
                                  Stroke="#FFCEA15F"
                                  StrokeThickness="3" Fill="Black">

                            <Path.Data>
                                <PathGeometry Figures="M 0,6 H 6,6 " />
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="Background" TargetName="back" Value="#FFD4BD9B"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="back" Value="#FFCDA05F"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--最大化按钮-->
    <Style x:Key="MaxButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="Button">
                    <!--背景色-->
                    <Border x:Name="back" Opacity="0.8" CornerRadius="0" BorderBrush="#FFCDA05F" Background="#FFFFE9C9" BorderThickness="1" Margin="1" Padding="2,0,0,0">
                        <!--按钮内容-->
                        <Path x:Name="cp" Width="12" Height="12"
                                  Stroke="#FFCEA15F"
                                  StrokeThickness="3" >

                            <Path.Data>
                                <PathGeometry Figures="M 0,0 L 0,12 12,12 12,0 0,0" />
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="Background" TargetName="back" Value="#FFD4BD9B"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="back" Value="#FFCDA05F"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--关闭按钮-->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="Button">
                    <!--背景色-->
                    <Border x:Name="back" Opacity="0.8" CornerRadius="0" BorderBrush="#FFCDA05F" Background="#FFFFE9C9" BorderThickness="1" Margin="1" Padding="2,0,0,0">
                        <!--按钮内容-->
                        <Path x:Name="cp" Width="12" Height="12"
                                  Stroke="#FFCEA15F"
                                  StrokeThickness="3" >

                            <Path.Data>
                                <PathGeometry Figures="M 0,0 L 12,12 M 0,12 L 12,0" />
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="Background" TargetName="back" Value="#FFD4BD9B"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="back" Value="#FFCDA05F"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>