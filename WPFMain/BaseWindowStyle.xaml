<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFMain.Base">

    <ControlTemplate x:Key="BaseWindowControlTemplate" TargetType="{x:Type Window}">
        <Grid>
            <Border Background="Transparent">
                <Border  CornerRadius="20" Background="White" BorderBrush="Black" BorderThickness="2,0,2,2">
                    <Grid>
                        <!--头部-->
                        <Border x:Name="MenuGrid" CornerRadius="15 15 0 0" Background="Black" Height="31" VerticalAlignment="Top">
                            <Grid>
                                <Label x:Name="Demo" Content="Demo" Foreground="White" HorizontalAlignment="Left" Margin="20,2,0,0" VerticalAlignment="Top" FontSize="16"/>
                                <Button Height="23"  x:Name="btnMin"  Background="Black" Margin="0,5,54,0" VerticalAlignment="Top" BorderThickness="0" HorizontalAlignment="Right">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Stretch="Fill" Source="Resources/Minimize-2.png" Height="15" Width="15" />
                                    </StackPanel>
                                </Button>
                                <Button Height="23" x:Name="btnMax"  Background="Black" HorizontalAlignment="Right" Margin="0,5,28,0" VerticalAlignment="Top" Width="24" BorderThickness="0">
                                    <StackPanel Orientation="Horizontal">
                                        <Image x:Name="imgMax" Stretch="Fill" Source="Resources/Maximize-1.png" Height="15" Width="15" HorizontalAlignment="Right" />
                                    </StackPanel>
                                </Button>
                                <Button Height="23" x:Name="btnClose"   Background="Black" HorizontalAlignment="Right" Margin="0,4,4,0" VerticalAlignment="Top" Width="24" BorderThickness="0">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Stretch="Fill" Source="Resources/Shut down-2.png" Height="15" Width="15" HorizontalAlignment="Right" />
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </Border>
                        <!--中部-->
                        <Border>
                            <DockPanel>
                                <AdornerDecorator>
                                    <ContentPresenter />
                                </AdornerDecorator>
                            </DockPanel>
                        </Border>
                        <!--尾部-->
                        <Border x:Name="FooterGrid" CornerRadius="0 0 15 15" Background="Black" Height="27" VerticalAlignment="Bottom">
                            <Grid >
                                <TextBlock x:Name="txtVersion" TextDecorations="Underline" TextAlignment="Center" Foreground="White" Text="当前版本：23.05.12" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Bottom" FontSize="14" Height="25" Cursor="Hand" Margin="12,0,0,0"/>
                                <GridSplitter HorizontalAlignment="Left" Height="27" Margin="144,0,0,0" VerticalAlignment="Bottom" Width="2" Opacity="0.4"/>
                                <GridSplitter HorizontalAlignment="Right" Height="27" VerticalAlignment="Bottom" Width="2" Opacity="0.4" Margin="0,0,170,0"/>
                                <TextBlock x:Name="txtAdmin" TextDecorations="Underline" TextAlignment="Center" Foreground="White" Text="528414865@QQ.com" HorizontalAlignment="Right" TextWrapping="Wrap" VerticalAlignment="Bottom" FontSize="14" Height="25" Cursor="Hand" Grid.Column="2" Margin="0,0,14,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="BaseWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Template" Value="{StaticResource BaseWindowControlTemplate}"/>
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="MaxHeight" Value="{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}"/>
        <Setter Property="MaxWidth" Value="{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}"/>
        <Setter Property="Opacity" Value="1"/>
        <Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment"  Value="Center"/>
        <Setter Property="VerticalContentAlignment"  Value="Center"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="10px"/>
        <Setter Property="Foreground" Value="#666699"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="DataGridCellStyleMoney" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
        <!--//设置每行的颜色为蓝色-->
        <Setter Property="Background" Value="White" />
        <Style.Triggers>
            <!--隔行换色-->
            <Trigger Property="AlternationIndex" Value="0" >
                <Setter Property="Background" Value="#f5f5f7" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="#f9f9fa" />
            </Trigger>
            <!--//设置鼠标移至行上方-->
            <Trigger Property="IsMouseOver" Value="True">
                <!--//设置行背景颜色会变为灰色-->
                <Setter Property="Background" Value="#FFF0ECEC"/>
                <!--//设置行文字颜色变为白色-->
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontSize" Value=" 15"/>
                <Setter Property="Height" Value="30"/>
            </Trigger>
            <!--//设置鼠标选中行-->
            <Trigger Property="IsSelected" Value="True">
                <!--//设置行背景颜色会变为灰色-->
                <Setter Property="Background" Value="#d9d9d9" />
                <!--//设置行文字颜色变为白色-->
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellSelectStyle" TargetType="DataGridCell">
        <Setter Property="BorderBrush" Value="#a8a8a8"/>
        <Setter Property="BorderThickness" Value="0.05"/>
        <Setter Property="Height" Value="25"/>
        <Style.Triggers>
            <!--//设置鼠标选中行-->
            <Trigger Property="IsSelected" Value="True">
                <!--//设置行背景颜色会变为灰色-->
                <Setter Property="Background" Value="#d9d9d9" />
                <!--//设置行文字颜色变为白色-->
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderThickness" Value="0.4"/>
                <Setter Property="BorderBrush" Value="White"/>
                <!--<Setter Property="FontSize" Value=" 15"/>
                <Setter Property="Height" Value="30"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
    
    
    <!--
    控件常用方法：

BeginEdit：使DataGrid进入编辑状态。

CancelEdit：取消DataGrid的编辑状态。

CollapseRowGroup：闭合DataGrid的行分组。

CommitEdit：确认DataGrid的编辑完成。

ExpandRowGroup：展开DataGrid的行分组。

GetGroupFromItem：从具体Item中得到分组。

ScrollIntoView：滚动DataGrid视图。
    
    控件常用属性：

AlternatingRowBackground：获取或设置一个笔刷用来描绘DataGrid奇数行的背景。

AreRowDetailsFrozen：获取或设置一个值用来判断是否冻结每行内容的详细信息。

AreRowGroupHeadersFrozen：获取或设置一个值用来判断是否冻结分组行的头部。

AutoGenerateColumns：获取或设置一个值用来判断是否允许自动生成表列。

CanUserReorderColumns：获取或设置一个值用来判断是否允许用户重新排列表列的位置。

CanUserSortColumns：获取或设置一个值用来判断是否允许用户按列对表中内容进行排序。

CellStyle：获取或设置单元格的样式。

ColumnHeaderHeight：获取或设置列头的高度。

ColumnHeaderStyle：获取或设置列头的样式。

Columns：获取组件中包含所有列的集合。

ColumnWidth：获取或设置列宽。

CurrentColumn：获取或设置包含当前单元格的列。

CurrentItem：获取包含当前单元格且与行绑定的数据项。

DragIndicatorStyle：获取或设置当拖曳列头时的样式。

DropLocationIndicatorStyle：获取或设置呈现列头时的样式。

FrozenColumnCount：获取或设置冻结列的个数。

GridLinesVisibility：获取或设置网格线的显示形式。

HeadersVisibility：获取或设置行头及列头的显示形式。

HorizontalGridLinesBrush：获取或设置水平网格线的笔刷。

HorizontalScrollBarVisibility：获取或设置水平滚动条的显示样式。

IsReadOnly：获取或设置DataGrid是否为只读。

MaxColumnWidth：获取或设置DataGrid的最大列宽。

MinColumnWidth：获取或设置DataGrid的最小列宽。

RowBackground：获取或设置用于填充行背景的笔刷。

RowDetailsTemplate：获取或设置被用于显示行详细部分的内容的模板。

RowDetailsVisibilityMode：获取或设置一个值用以判定行详细部分是否显示。

RowGroupHeaderStyles：获取呈现行分组头部的样式。

RowHeaderStyle：获取或设置呈现行头的样式。

RowHeaderWidth：获取或设置行头的宽度。

RowHeight：获取或设置每行的高度。

RowStyle：获取或设置呈现行时的样式。

SelectedIndex：获取或设置当前选中部分的索引值。

SelectedItem：获取或设置与当前被选中行绑定的数据项。

SelectedItems：获取与当前被选中的各行绑定的数据项们的列表（List）。

SelectionMode：获取或设置DataGrid的选取模式。

VerticalGridLinesBrush：获取或设置垂直网格线的笔刷。

VerticalScrollBarVisibility：获取或设置垂直滚动条的显示样式。
    -->